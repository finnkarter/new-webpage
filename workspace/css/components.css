/* MILBASE Components */

/* === Buttons === */
.btn-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    background: transparent;
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    color: var(--color-text-muted);
    cursor: pointer;
    transition: all var(--transition-fast);
    position: relative;
    overflow: hidden;
}

.btn-icon:hover {
    background: var(--color-card);
    color: var(--color-text);
    transform: translateY(-1px);
}

.btn-icon:active {
    transform: translateY(0);
}

/* === Hamburger Menu === */
.hamburger {
    display: flex;
    flex-direction: column;
    gap: 3px;
    width: 18px;
    height: 18px;
}

.hamburger span {
    display: block;
    width: 100%;
    height: 2px;
    background: currentColor;
    border-radius: 1px;
    transition: all var(--transition-fast);
}

.hamburger.active span:nth-child(1) {
    transform: rotate(45deg) translate(5px, 5px);
}

.hamburger.active span:nth-child(2) {
    opacity: 0;
}

.hamburger.active span:nth-child(3) {
    transform: rotate(-45deg) translate(5px, -5px);
}

/* === Action Buttons === */
.action-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-2);
    padding: var(--space-4) var(--space-6);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-xl);
    background: var(--gradient-card);
    color: var(--color-text);
    font-size: var(--text-base);
    font-weight: var(--weight-medium);
    cursor: pointer;
    transition: all var(--transition-bounce);
    position: relative;
    overflow: hidden;
    text-decoration: none;
    backdrop-filter: blur(8px);
}

.action-btn::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94), height 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.action-btn:active::before {
    width: 300px;
    height: 300px;
}

.action-btn:hover {
    transform: translateY(-3px) scale(1.02);
    box-shadow: var(--shadow-colored);
    border-color: var(--primary-400);
}

.action-btn.primary {
    background: var(--gradient-primary);
    border-color: var(--primary-500);
    color: white;
    box-shadow: var(--shadow-glow);
}

.action-btn.primary:hover {
    background: linear-gradient(135deg, var(--primary-600), var(--primary-700));
    border-color: var(--primary-400);
    box-shadow: var(--shadow-glow), var(--shadow-xl);
    transform: translateY(-4px) scale(1.05);
}

.action-btn.secondary:hover {
    background: var(--color-card);
    border-color: var(--color-primary);
}

.action-icon {
    font-size: var(--text-lg);
}

/* === Toast Notifications === */
.toast {
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    padding: var(--space-4);
    margin-bottom: var(--space-3);
    box-shadow: var(--shadow-xl);
    display: flex;
    align-items: flex-start;
    gap: var(--space-3);
    animation: slideInRight 0.3s ease;
    position: relative;
    overflow: hidden;
}

.toast::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 4px;
    background: var(--color-primary);
}

.toast.success::before {
    background: var(--success);
}

.toast.warning::before {
    background: var(--warning);
}

.toast.error::before {
    background: var(--error);
}

.toast-icon {
    font-size: var(--text-lg);
    flex-shrink: 0;
    margin-top: 2px;
}

.toast-content {
    flex: 1;
    min-width: 0;
}

.toast-title {
    font-size: var(--text-sm);
    font-weight: var(--weight-semibold);
    color: var(--color-text);
    margin-bottom: var(--space-1);
}

.toast-message {
    font-size: var(--text-sm);
    color: var(--color-text-muted);
    line-height: var(--leading-relaxed);
}

.toast-close {
    background: none;
    border: none;
    color: var(--color-text-subtle);
    cursor: pointer;
    padding: var(--space-1);
    border-radius: var(--radius-sm);
    transition: all var(--transition-fast);
    flex-shrink: 0;
}

.toast-close:hover {
    background: var(--color-card);
    color: var(--color-text);
}

/* === Animations === */
@keyframes slideInRight {
    from {
        transform: translateX(100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideOutRight {
    from {
        transform: translateX(0);
        opacity: 1;
    }
    to {
        transform: translateX(100%);
        opacity: 0;
    }
}

.toast.removing {
    animation: slideOutRight 0.3s ease forwards;
}

/* === Loading States === */
.loading {
    position: relative;
    pointer-events: none;
}

.loading::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    margin: -10px 0 0 -10px;
    border: 2px solid transparent;
    border-top: 2px solid var(--color-primary);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

/* === Ripple Effect === */
@keyframes ripple {
    from {
        transform: scale(0);
        opacity: 1;
    }
    to {
        transform: scale(4);
        opacity: 0;
    }
}

.ripple {
    position: relative;
    overflow: hidden;
}

.ripple::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.5);
    transform: translate(-50%, -50%);
    transition: width 0.6s, height 0.6s;
}

.ripple:active::before {
    width: 200px;
    height: 200px;
}

/* === Tooltips === */
.tooltip {
    position: relative;
}

.tooltip::before {
    content: attr(title);
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    background: var(--color-surface);
    color: var(--color-text);
    padding: var(--space-2) var(--space-3);
    border-radius: var(--radius-md);
    font-size: var(--text-xs);
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition: all var(--transition-fast);
    z-index: var(--z-tooltip);
    border: 1px solid var(--color-border);
    box-shadow: var(--shadow-lg);
    margin-bottom: var(--space-2);
}

.tooltip::after {
    content: '';
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    border: 4px solid transparent;
    border-top-color: var(--color-border);
    opacity: 0;
    visibility: hidden;
    transition: all var(--transition-fast);
    margin-bottom: calc(var(--space-2) - 4px);
}

.tooltip:hover::before,
.tooltip:hover::after {
    opacity: 1;
    visibility: visible;
}

/* === Focus Styles === */
.focus-ring {
    outline: 2px solid transparent;
    outline-offset: 2px;
}

.focus-ring:focus {
    outline-color: var(--color-primary);
}

/* === Utility Classes === */
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

.text-center { text-align: center; }
.text-left { text-align: left; }
.text-right { text-align: right; }

.hidden { display: none; }
.invisible { visibility: hidden; }
.visible { visibility: visible; }

/* === Page Transition Animations === */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeInScale {
    from {
        opacity: 0;
        transform: scale(0.9);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes slideInLeft {
    from {
        opacity: 0;
        transform: translateX(-30px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes pulse {
    0%, 100% {
        opacity: 1;
    }
    50% {
        opacity: 0.7;
    }
}

@keyframes float {
    0%, 100% {
        transform: translateY(0px);
    }
    50% {
        transform: translateY(-5px);
    }
}

/* Page Load Animations */
.main {
    animation: fadeInUp 0.6s ease-out;
}

.feature-card {
    animation: fadeInScale 0.5s ease-out;
    animation-fill-mode: both;
}

.feature-card:nth-child(1) { animation-delay: 0.1s; }
.feature-card:nth-child(2) { animation-delay: 0.2s; }
.feature-card:nth-child(3) { animation-delay: 0.3s; }
.feature-card:nth-child(4) { animation-delay: 0.4s; }
.feature-card:nth-child(5) { animation-delay: 0.5s; }
.feature-card:nth-child(6) { animation-delay: 0.6s; }

.stat-card {
    animation: slideInLeft 0.5s ease-out;
    animation-fill-mode: both;
}

.stat-card:nth-child(1) { animation-delay: 0.1s; }
.stat-card:nth-child(2) { animation-delay: 0.2s; }
.stat-card:nth-child(3) { animation-delay: 0.3s; }

.action-btn {
    animation: fadeInUp 0.5s ease-out;
    animation-fill-mode: both;
}

.action-btn:nth-child(1) { animation-delay: 0.7s; }
.action-btn:nth-child(2) { animation-delay: 0.8s; }
.action-btn:nth-child(3) { animation-delay: 0.9s; }

/* Floating Animation for Icons */
.feature-icon,
.stat-icon {
    animation: float 3s ease-in-out infinite;
}

.feature-icon:nth-child(odd) {
    animation-delay: 0.5s;
}

/* === Additional Button Styles === */

/* Action Button (vacation.html) */
.action-button {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-2);
    padding: var(--space-3) var(--space-5);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    background: var(--gradient-card);
    backdrop-filter: blur(8px);
    color: var(--color-text);
    font-size: var(--text-sm);
    font-weight: var(--weight-medium);
    cursor: pointer;
    transition: all var(--transition-bounce);
    position: relative;
    overflow: hidden;
    text-decoration: none;
}

.action-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, 
        rgba(var(--primary-rgb), 0.1) 0%, 
        rgba(var(--accent-rgb), 0.05) 100%);
    border-radius: inherit;
    opacity: 0;
    transition: opacity var(--transition-smooth);
    pointer-events: none;
}

.action-button:hover::before {
    opacity: 1;
}

.action-button:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-glow);
    border-color: rgba(var(--primary-rgb), 0.3);
    background: var(--gradient-primary);
    color: white;
}

.action-button:active {
    transform: translateY(0);
}

.action-button i {
    font-size: 1.1rem;
}

/* Simulation Button (sniper.html) */
.sim-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-2);
    padding: var(--space-3) var(--space-5);
    border: 1px solid var(--sniper-primary, var(--color-border));
    border-radius: var(--radius-lg);
    background: linear-gradient(135deg, var(--sniper-primary, var(--color-primary)), var(--sniper-accent, var(--color-accent)));
    color: white;
    font-size: var(--text-sm);
    font-weight: var(--weight-semibold);
    cursor: pointer;
    transition: all var(--transition-smooth);
    position: relative;
    overflow: hidden;
    text-decoration: none;
}

.sim-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, 
        rgba(255, 255, 255, 0.1) 0%, 
        rgba(255, 255, 255, 0.05) 100%);
    opacity: 0;
    transition: opacity var(--transition-smooth);
    pointer-events: none;
}

.sim-button:hover::before {
    opacity: 1;
}

.sim-button:hover {
    transform: translateY(-2px) scale(1.02);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
    border-color: rgba(255, 255, 255, 0.3);
}

.sim-button:active {
    transform: translateY(0) scale(0.98);
}

/* Primary Button (discharge-calculator.html) */
.btn-primary {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-2);
    padding: var(--space-4) var(--space-6);
    border: 1px solid var(--primary-500);
    border-radius: var(--radius-lg);
    background: var(--gradient-primary);
    color: white;
    font-size: var(--text-base);
    font-weight: var(--weight-semibold);
    cursor: pointer;
    transition: all var(--transition-bounce);
    position: relative;
    overflow: hidden;
    text-decoration: none;
    box-shadow: var(--shadow-lg);
}

.btn-primary::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94), height 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.btn-primary:active::before {
    width: 300px;
    height: 300px;
}

.btn-primary:hover {
    background: linear-gradient(135deg, var(--primary-600), var(--primary-700));
    transform: translateY(-3px) scale(1.02);
    box-shadow: var(--shadow-glow), var(--shadow-xl);
    border-color: var(--primary-400);
}

.btn-primary:active {
    transform: translateY(-1px) scale(0.98);
}

.btn-primary .btn-icon {
    font-size: 1.2rem;
}

/* Game Buttons (games.html) */
.game-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-2);
    padding: var(--space-3) var(--space-5);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    background: var(--gradient-primary);
    color: white;
    font-size: var(--text-sm);
    font-weight: var(--weight-medium);
    cursor: pointer;
    transition: all var(--transition-smooth);
    position: relative;
    overflow: hidden;
    text-decoration: none;
    box-shadow: var(--shadow-md);
}

.game-button:hover {
    background: linear-gradient(135deg, var(--primary-600), var(--primary-700));
    transform: translateY(-2px) scale(1.02);
    box-shadow: var(--shadow-lg);
    border-color: var(--primary-400);
}

.game-button.secondary {
    background: var(--color-card);
    border-color: var(--color-border);
    color: var(--color-text);
    box-shadow: var(--shadow-sm);
}

.game-button.secondary:hover {
    background: var(--color-border);
    border-color: var(--color-primary);
    color: var(--color-primary);
    transform: translateY(-1px);
}

.rps-button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 80px;
    height: 80px;
    font-size: 2.5rem;
    padding: var(--space-3);
    background: var(--color-card);
    border: 2px solid var(--color-border);
    border-radius: var(--radius-xl);
    cursor: pointer;
    transition: all var(--transition-bounce);
    position: relative;
    overflow: hidden;
}

.rps-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: var(--gradient-primary);
    opacity: 0;
    transition: opacity var(--transition-smooth);
    border-radius: inherit;
}

.rps-button:hover::before {
    opacity: 1;
}

.rps-button:hover {
    transform: scale(1.1) translateY(-2px);
    border-color: var(--color-primary);
    box-shadow: var(--shadow-lg);
}

.rps-button:active {
    transform: scale(0.95);
}

.quiz-option {
    display: block;
    width: 100%;
    padding: var(--space-3) var(--space-4);
    margin: var(--space-2) 0;
    background: var(--color-card);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    cursor: pointer;
    transition: all var(--transition-smooth);
    text-align: left;
    color: var(--color-text);
    font-size: var(--text-sm);
    position: relative;
    overflow: hidden;
}

.quiz-option::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: var(--gradient-primary);
    opacity: 0;
    transition: opacity var(--transition-smooth);
}

.quiz-option:hover::before {
    opacity: 0.1;
}

.quiz-option:hover {
    background: var(--color-primary);
    border-color: var(--color-primary);
    color: white;
    transform: translateX(5px);
}

.quiz-option.selected {
    background: var(--gradient-primary);
    border-color: var(--primary-400);
    color: white;
    transform: translateX(5px);
}

.quiz-option.correct {
    background: var(--success) !important;
    border-color: var(--success) !important;
    color: white !important;
}

.quiz-option.wrong {
    background: var(--error) !important;
    border-color: var(--error) !important;
    color: white !important;
}

/* Toolbar Button (memo.html) */
.toolbar-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 36px;
    height: 36px;
    background: transparent;
    border: 1px solid var(--color-border);
    border-radius: var(--radius-md);
    color: var(--color-text-muted);
    cursor: pointer;
    transition: all var(--transition-smooth);
    position: relative;
    overflow: hidden;
}

.toolbar-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: var(--gradient-primary);
    opacity: 0;
    transition: opacity var(--transition-smooth);
    border-radius: inherit;
}

.toolbar-btn:hover::before {
    opacity: 0.1;
}

.toolbar-btn:hover {
    background: var(--color-card);
    color: var(--color-text);
    border-color: var(--color-primary);
    transform: translateY(-1px);
}

.toolbar-btn:active {
    transform: translateY(0) scale(0.95);
}

.toolbar-btn.active {
    background: var(--gradient-primary);
    border-color: var(--primary-400);
    color: white;
}

/* Back Button */
.back-btn {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    padding: var(--space-2) var(--space-3);
    background: transparent;
    border: 1px solid var(--color-border);
    border-radius: var(--radius-md);
    color: var(--color-text-muted);
    text-decoration: none;
    font-size: var(--text-sm);
    font-weight: var(--weight-medium);
    cursor: pointer;
    transition: all var(--transition-smooth);
}

.back-btn:hover {
    background: var(--color-card);
    color: var(--color-text);
    border-color: var(--color-primary);
    transform: translateX(-2px);
}

/* Language Button */
.lang-btn {
    padding: var(--space-1) var(--space-2);
    background: transparent;
    border: 1px solid var(--color-border);
    border-radius: var(--radius-sm);
    color: var(--color-text-muted);
    font-size: var(--text-xs);
    cursor: pointer;
    transition: all var(--transition-smooth);
}

.lang-btn:hover {
    background: var(--color-card);
    color: var(--color-text);
}

.lang-btn.active {
    background: var(--gradient-primary);
    border-color: var(--primary-400);
    color: white;
}

/* Menu Button */
.menu-btn {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    background: transparent;
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    cursor: pointer;
    transition: all var(--transition-smooth);
    gap: 4px;
}

.menu-btn span {
    display: block;
    width: 20px;
    height: 2px;
    background: var(--color-text-muted);
    border-radius: 1px;
    transition: all var(--transition-smooth);
}

.menu-btn:hover {
    background: var(--color-card);
    border-color: var(--color-primary);
}

.menu-btn:hover span {
    background: var(--color-primary);
}

.menu-btn.active span:nth-child(1) {
    transform: rotate(45deg) translate(5px, 5px);
}

.menu-btn.active span:nth-child(2) {
    opacity: 0;
}

.menu-btn.active span:nth-child(3) {
    transform: rotate(-45deg) translate(5px, -5px);
}

/* Navigation Close Button */
.nav-close {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    background: transparent;
    border: none;
    cursor: pointer;
    gap: 4px;
}

.nav-close span {
    display: block;
    width: 16px;
    height: 2px;
    background: var(--color-text-muted);
    border-radius: 1px;
    transition: all var(--transition-smooth);
}

.nav-close span:nth-child(1) {
    transform: rotate(45deg) translate(3px, 3px);
}

.nav-close span:nth-child(2) {
    transform: rotate(-45deg) translate(3px, -3px);
}

.nav-close:hover span {
    background: var(--color-primary);
}

/* Game Close Button */
.game-close {
    position: absolute;
    top: var(--space-3);
    right: var(--space-3);
    width: 32px;
    height: 32px;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    color: var(--color-text);
    font-size: var(--text-lg);
    cursor: pointer;
    transition: all var(--transition-smooth);
    display: flex;
    align-items: center;
    justify-content: center;
}

.game-close:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.4);
    transform: scale(1.1);
}

/* === Form Elements === */

/* Input Fields */
.form-input,
.game-input,
.search-box,
input[type="text"],
input[type="number"],
input[type="date"],
input[type="email"],
select {
    padding: var(--space-3) var(--space-4);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    background: var(--color-card);
    color: var(--color-text);
    font-size: var(--text-base);
    font-family: inherit;
    transition: all var(--transition-smooth);
    width: 100%;
    box-sizing: border-box;
}

.form-input:focus,
.game-input:focus,
.search-box:focus,
input[type="text"]:focus,
input[type="number"]:focus,
input[type="date"]:focus,
input[type="email"]:focus,
select:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 3px rgba(var(--primary-rgb), 0.1);
    background: var(--color-surface);
    transform: translateY(-1px);
}

.form-input::placeholder,
.game-input::placeholder,
.search-box::placeholder {
    color: var(--color-text-muted);
}

/* Form Labels */
.form-label {
    display: block;
    margin-bottom: var(--space-2);
    color: var(--color-text);
    font-size: var(--text-sm);
    font-weight: var(--weight-medium);
}

/* Form Groups */
.form-group {
    margin-bottom: var(--space-4);
}

.form-group.required .form-label::after {
    content: ' *';
    color: var(--error);
}

/* === Responsive Helpers === */
@media (max-width: 768px) {
    .action-btn {
        padding: var(--space-3) var(--space-4);
        font-size: var(--text-sm);
    }
    
    .action-button,
    .sim-button,
    .btn-primary,
    .game-button {
        padding: var(--space-2) var(--space-4);
        font-size: var(--text-sm);
    }
    
    .rps-button {
        width: 60px;
        height: 60px;
        font-size: 2rem;
    }
    
    .toast {
        margin: 0 var(--space-3) var(--space-3);
        max-width: calc(100vw - var(--space-6));
    }
    
    /* Disable complex animations on mobile for performance */
    @media (prefers-reduced-motion: no-preference) {
        .feature-card,
        .stat-card,
        .action-btn {
            animation-duration: 0.3s;
        }
        
        .feature-icon,
        .stat-icon {
            animation: none;
        }
    }
}